"use strict";(self.webpackChunkoauth_app=self.webpackChunkoauth_app||[]).push([[35],{"./src/client/ui/components/Button/Button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>Button_stories});var _process$env,defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./node_modules/@mantine/core/esm/Button/Button.js"),trace_api=__webpack_require__("./node_modules/@opentelemetry/api/build/esm/trace-api.js"),context_api=__webpack_require__("./node_modules/@opentelemetry/api/build/esm/context-api.js"),trace_status=__webpack_require__("./node_modules/@opentelemetry/api/build/esm/trace/status.js"),WebTracerProvider=__webpack_require__("./node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js"),Resource=(__webpack_require__("./node_modules/@opentelemetry/auto-instrumentations-web/build/esm/index.js"),__webpack_require__("./node_modules/@opentelemetry/context-zone/build/esm/index.js"),__webpack_require__("./node_modules/@opentelemetry/resources/build/esm/Resource.js")),OTLPTraceExporter=__webpack_require__("./node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/platform/browser/OTLPTraceExporter.js"),STORAGE_KEYS=(_process$env=process.env,function(STORAGE_KEYS){return STORAGE_KEYS.FIREBASE="@firebase",STORAGE_KEYS}({}));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,defineProperty.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}var bindingSpan,userEmail=function userEmail(){var _useUserFirebase$user,_useUserFirebase;return null!==(_useUserFirebase$user=null===(_useUserFirebase=function useUserFirebase(){if("undefined"!=typeof window){var _window,data=null===(_window=window)||void 0===_window?void 0:_window.localStorage.getItem(STORAGE_KEYS.FIREBASE);return data?JSON.parse(data):null}return null}())||void 0===_useUserFirebase||null===(_useUserFirebase=_useUserFirebase.user)||void 0===_useUserFirebase?void 0:_useUserFirebase.email)&&void 0!==_useUserFirebase$user?_useUserFirebase$user:"anon"},resource=new Resource._({"service.name":"next-client-front"}),provider=new WebTracerProvider.m({resource}),webTracerWithZone=(new OTLPTraceExporter.M({url:"http://localhost:4318/v1/traces",headers:{"Content-Type":"application/json","Access-Control-Allow-Headers":"*","X-CSRF":"1"}}),new OTLPTraceExporter.M({url:"/api/local-tracking"}),provider.getTracer("next-client-front"));var _Primary$parameters,_Primary$parameters2,_excluded=["onClick","attributes","variant"],__jsx=react.createElement;function UIeButton(props){var onClick=props.onClick,attributes=props.attributes,color=props.variant,rest=(0,objectWithoutProperties.Z)(props,_excluded);return __jsx(Button.z,(0,esm_extends.Z)({variant:"default",color,onClick:function onClickButton(){!function traceSpan(name,customAttributes){var singleSpan,baseAttrs={attributes:_objectSpread({"manual-handle":!0,"x-user":userEmail()},customAttributes)};if(bindingSpan){var ctx=trace_api.g.setSpan(context_api.D.active(),bindingSpan);singleSpan=webTracerWithZone.startSpan(name,baseAttrs,ctx),bindingSpan=void 0}else singleSpan=webTracerWithZone.startSpan(name,baseAttrs);return context_api.D.with(trace_api.g.setSpan(context_api.D.active(),singleSpan),(function(){try{return singleSpan.end(),customAttributes}catch(error){throw singleSpan.setStatus({code:trace_status.Q.ERROR}),singleSpan.end(),error}}))}("button-click",attributes),onClick()}},rest))}UIeButton.displayName="UIeButton",UIeButton.__docgenInfo={description:"",methods:[],displayName:"UIeButton",props:{onClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},attributes:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},description:""},variant:{required:!0,tsType:{name:"union",raw:"'red' | 'blue'",elements:[{name:"literal",value:"'red'"},{name:"literal",value:"'blue'"}]},description:""}}};try{UIeButton.displayName="UIeButton",UIeButton.__docgenInfo={description:"",displayName:"UIeButton",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"() => void"}},attributes:{defaultValue:null,description:"",name:"attributes",required:!1,type:{name:"Record<string, any>"}},variant:{defaultValue:null,description:"",name:"variant",required:!0,type:{name:"enum",value:[{value:'"red"'},{value:'"blue"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/client/ui/components/Button/index.tsx#UIeButton"]={docgenInfo:UIeButton.__docgenInfo,name:"UIeButton",path:"src/client/ui/components/Button/index.tsx#UIeButton"})}catch(__react_docgen_typescript_loader_error){}function Button_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function Button_stories_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?Button_stories_ownKeys(Object(source),!0).forEach((function(key){(0,defineProperty.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):Button_stories_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}const Button_stories={title:"UI/Button",component:UIeButton,tags:["autodocs"]};var Primary={args:{variant:"blue"}};Primary.parameters=Button_stories_objectSpread(Button_stories_objectSpread({},Primary.parameters),{},{docs:Button_stories_objectSpread(Button_stories_objectSpread({},null===(_Primary$parameters=Primary.parameters)||void 0===_Primary$parameters?void 0:_Primary$parameters.docs),{},{source:Button_stories_objectSpread({originalSource:'{\n  args: {\n    variant: "blue"\n  }\n}'},null===(_Primary$parameters2=Primary.parameters)||void 0===_Primary$parameters2||null===(_Primary$parameters2=_Primary$parameters2.docs)||void 0===_Primary$parameters2?void 0:_Primary$parameters2.source)})})}}]);